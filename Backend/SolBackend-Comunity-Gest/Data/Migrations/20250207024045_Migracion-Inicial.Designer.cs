// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(Context_DB))]
    [Migration("20250207024045_Migracion-Inicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Herramienta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Herramientas");
                });

            modelBuilder.Entity("Data.Models.Instalacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("Hora_Fin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("Hora_Inicio")
                        .HasColumnType("interval");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Instalaciones");
                });

            modelBuilder.Entity("Data.Models.Reporte", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Recurso_Afectado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("Data.Models.Reserva_Herramienta", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Dia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("Disponibilidad")
                        .HasColumnType("character(1)");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Herramienta_ID")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("Hora_Fin")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("Hora_Inicio")
                        .HasColumnType("interval");

                    b.Property<int>("Usuario_ID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("Herramienta_ID");

                    b.HasIndex("Usuario_ID");

                    b.ToTable("Reserva_Herramientas");
                });

            modelBuilder.Entity("Data.Models.Reserva_Instalacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<char>("Disponibilidad")
                        .HasColumnType("character(1)");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Instalacion_ID")
                        .HasColumnType("integer");

                    b.Property<int>("Usuario_ID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("Instalacion_ID");

                    b.HasIndex("Usuario_ID");

                    b.ToTable("Reserva_Instalaciones");
                });

            modelBuilder.Entity("Data.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Cedula")
                        .HasColumnType("integer");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Estado")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Telefono")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Data.Models.Reserva_Herramienta", b =>
                {
                    b.HasOne("Data.Models.Herramienta", "Herramienta")
                        .WithMany("Reservas_Herramientas")
                        .HasForeignKey("Herramienta_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.Models.Usuario", "Usuario")
                        .WithMany("Reservas_Herramientas")
                        .HasForeignKey("Usuario_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Herramienta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Data.Models.Reserva_Instalacion", b =>
                {
                    b.HasOne("Data.Models.Instalacion", "Instalacion")
                        .WithMany("Reserva_Instalaciones")
                        .HasForeignKey("Instalacion_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Data.Models.Usuario", "Usuario")
                        .WithMany("Reserva_Instalaciones")
                        .HasForeignKey("Usuario_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Instalacion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Data.Models.Herramienta", b =>
                {
                    b.Navigation("Reservas_Herramientas");
                });

            modelBuilder.Entity("Data.Models.Instalacion", b =>
                {
                    b.Navigation("Reserva_Instalaciones");
                });

            modelBuilder.Entity("Data.Models.Usuario", b =>
                {
                    b.Navigation("Reserva_Instalaciones");

                    b.Navigation("Reservas_Herramientas");
                });
#pragma warning restore 612, 618
        }
    }
}
